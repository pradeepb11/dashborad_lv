"use strict";(self.webpackChunkdashboardpaynet=self.webpackChunkdashboardpaynet||[]).push([[592],{7560:(d,g,e)=>{e.d(g,{a:()=>_});var s=e(4893),u=e(7656),c=e(245);let _=(()=>{class t{constructor(o,a){this.router=o,this.authService=a}canActivate(o,a){return!!this.authService.loggedInUserValue||(this.router.navigate(["/login"]),!1)}}return t.\u0275fac=function(o){return new(o||t)(s.LFG(u.F0),s.LFG(c.q))},t.\u0275prov=s.Yz7({token:t,factory:t.\u0275fac,providedIn:"root"}),t})()},245:(d,g,e)=>{e.d(g,{q:()=>a});var s=e(520),u=e(4004),c=e(1135),_=e(2340),t=e(4893);const i={headers:new s.WM({"Content-Type":"application/json"})},o=`${_.N.apiUrl}`;let a=(()=>{class r{constructor(n){this.http=n,this.loggedInStatus=JSON.parse(localStorage.getItem("loggedInUser")||"false"),this.loggedUserSubject=new c.X(JSON.parse(localStorage.getItem("loggedInUser")||"{}")),this.loggedInUser=this.loggedUserSubject.asObservable()}get loggedInUserValue(){return this.loggedUserSubject.value}get LoginStatus(){return JSON.parse(localStorage.getItem("loggedInUser")||this.loggedInStatus.toString())}loginUser(n,v){return this.http.post(`${o}auth/login`,{username:n,password:v},i).pipe((0,u.U)(l=>("success"===l.response.status?(localStorage.setItem("loggedInUser",JSON.stringify(l)),this.loggedUserSubject.next(l)):localStorage.removeItem("loggedInUser"),l)))}logOutUsers(){localStorage.removeItem("loggedInUser"),this.loggedUserSubject.next(null)}}return r.\u0275fac=function(n){return new(n||r)(t.LFG(s.eN))},r.\u0275prov=t.Yz7({token:r,factory:r.\u0275fac,providedIn:"root"}),r})()}}]);